<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namemapper:接口的全路径-->
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">
    <!--表示返回结果集
    ID:唯一标识，
    type：返回结果类型
    automapping : 自动映射,只要数据库，有的字段，都会和实体类自动映射
    -->
    <resultMap id="BaseAttrInfo" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">

        <!--id：表示主键
        property：实体类的属性名称
        column：表示sqk语句执行后的列名称
        -->
        <id property="id" column="id"></id>

        <!--collection：表示配置1对多
        property：实体类的属性名称
        ofType：表示多的那面返回的数据类型
        开启自动映射
        -->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
            <!--此时id发生重名-->
            <id property="id" column="attr_value_id"></id>
        </collection>
    </resultMap>
    
    <!--执行方法
    id：表示方法名称
    resultmap：返回结果集id
    -->
    <select id="selectBaseAttrInfoList" resultMap="BaseAttrInfo">

<!--            select-->
<!--                bai.id,-->
<!--                   bai.category_id,-->
<!--                   bai.category_level,-->
<!--                   bav.id attr_value_id,-->
<!--                   bav.value_name-->
<!--            from base_attr_value bav inner join base_attr_info bai-->
<!--            on bai.id = bav.attr_id-->
<!--        <where>-->
<!--            <if test="category1Id != null and category1Id != 0">-->
<!--                or (bai.category_id = #{category1Id} and bai.category_level = 1)-->
<!--            </if>-->
<!--            <if test="category2Id != null and category2Id != 0">-->
<!--         uild   </if>-->
<!--            <if test="category3Id != null and category3Id != 0">-->
<!--                or (bai.category_id = #{category3Id} and bai.category_level = 3)-->
<!--            </if>-->
<!--        </where>-->
<!--        order by bai.category_level, bai.id-->
        select
        bai.id,
        bai.attr_name,
        bai.category_id,
        bai.category_level,
        bav.id attr_value_id,
        bav.value_name,
        bav.attr_id
        from base_attr_info bai inner join  base_attr_value bav
        on bai.id = bav.attr_id
        <where>
            <if test="category1Id != null and category1Id != 0">
                or (bai.category_id = #{category1Id} and bai.category_level = 1)
            </if>

            <if test="category2Id != null and category2Id != 0">
                or (bai.category_id = #{category2Id} and bai.category_level = 2)
            </if>

            <if test="category3Id != null and category3Id != 0">
                or (bai.category_id = #{category3Id} and bai.category_level = 3)
            </if>
        </where>

        order by bai.category_level, bai.id

    </select>
</mapper>